build-last-errors="[]"
build-last-errors-base-dir=""
build-last-outputs="[{\"type\":0,\"output\":\"==> devtools::document(roclets = c('rd', 'collate', 'namespace'))\\n\\n\"},{\"type\":1,\"output\":\"\\u001B[1m\\u001B[22m\\u001B[36mℹ\\u001B[39m Updating \\u001B[34mDIVASpackage\\u001B[39m documentation\\n\"},{\"type\":1,\"output\":\"\\u001B[1m\\u001B[22m\\u001B[36mℹ\\u001B[39m Loading \\u001B[34mDIVASpackage\\u001B[39m\\n\"},{\"type\":1,\"output\":\"Signal estimation for datablock1\\n[1] \\\"datablockc size\\\"\\n[1] 200 400\\n\"},{\"type\":1,\"output\":\"\\u001B[1m\\u001B[33mError\\u001B[39m in `load_all()`:\\u001B[22m\\n\\u001B[1m\\u001B[22m\\u001B[33m!\\u001B[39m Failed to load \\u001B]8;;file:///Users/byronsun/Projects/DIVASpackage/R/DJIVESignalExtractJP.R\\u0007\\u001B[34mR/DJIVESignalExtractJP.R\\u001B[39m\\u001B]8;;\\u0007\\n\\u001B[1mCaused by error in `MatSignalExtractJP()`:\\u001B[22m\\n\\u001B[33m!\\u001B[39m could not find function \\\"MatSignalExtractJP\\\"\\nBacktrace:\\n\\u001B[90m     \\u001B[39m▆\\n\\u001B[90m  1. \\u001B[39m├─\\u001B[1mbase\\u001B[22m::suppressPackageStartupMessages(...)\\n\\u001B[90m  2. \\u001B[39m│ └─base::withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\\\"muffleMessage\\\"))\\n\\u001B[90m  3. \\u001B[39m├─\\u001B[1mdevtools\\u001B[22m::document(roclets = c(\\\"rd\\\", \\\"collate\\\", \\\"namespace\\\"))\\n\\u001B[90m  4. \\u001B[39m│ └─roxygen2::roxygenise(pkg$path, roclets)\\n\\u001B[90m  5. \\u001B[39m│   └─roxygen2 (local) load_code(base_path)\\n\\u001B[90m  6. \\u001B[39m│     └─\\u001B[1mpkgload\\u001B[22m::load_all(path, helpers = FALSE, attach_testthat = FALSE)\\n\\u001B[90m  7. \\u001B[39m│       └─pkgload::load_code(path, quiet = quiet)\\n\\u001B[90m  8. \\u001B[39m│         ├─\\u001B[1mwithr\\u001B[22m (local) withr_with_dir(path, source_many(paths, encoding, env))\\n\\u001B[90m  9. \\u001B[39m│         │ └─\\u001B[1mbase\\u001B[22m::force(code)\\n\\u001B[90m 10. \\u001B[39m│         └─\\u001B[1mpkgload\\u001B[22m:::source_many(paths, encoding, env)\\n\\u001B[90m 11. \\u001B[39m│           ├─\\u001B[1mrlang\\u001B[22m::try_fetch(...)\\n\\u001B[90m 12. \\u001B[39m│           │ ├─\\u001B[1mbase\\u001B[22m::tryCatch(...)\\n\\u001B[90m 13. \\u001B[39m│           │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\\n\\u001B[90m 14. \\u001B[39m│           │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\\n\\u001B[90m 15. \\u001B[39m│           │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\\n\\u001B[90m 16. \\u001B[39m│           │ └─base::withCallingHandlers(...)\\n\\u001B[90m 17. \\u001B[39m│           └─\\u001B[1mpkgload\\u001B[22m:::source_one(file, encoding, envir = envir)\\n\\u001B[90m 18. \\u001B[39m│             └─\\u001B[1mbase\\u001B[22m::eval(expr, envir)\\n\\u001B[90m 19. \\u001B[39m│               └─base::eval(expr, envir)\\n\\u001B[90m 20. \\u001B[39m│                 └─\\u001B[1mDIVASpackage\\u001B[22m:::DJIVESignalExtractJP(...)\\n\\u001B[90m 21. \\u001B[39m└─\\u001B[1mbase\\u001B[22m::.handleSimpleError(...)\\u001B[90m at \\u001B]8;line = 46:col = 7;file:///Users/byronsun/Projects/DIVASpackage/R/DJIVESignalExtractJP.R\\u0007DIVASpackage/R/DJIVESignalExtractJP.R:46:7\\u001B]8;;\\u0007\\u001B[39m\\n\\u001B[90m 22. \\u001B[39m  └─\\u001B[1mrlang\\u001B[22m (local) h(simpleError(msg, call))\\n\\u001B[90m 23. \\u001B[39m    └─handlers[[1L]](cnd)\\n\\u001B[90m 24. \\u001B[39m      └─\\u001B[1mpkgload\\u001B[22m:::handle_source_error(cnd, file)\\n\\u001B[90m 25. \\u001B[39m        └─\\u001B[1mcli\\u001B[22m::cli_abort(msg, parent = cnd, call = quote(load_all()))\\n\\u001B[90m 26. \\u001B[39m          └─\\u001B[1mrlang\\u001B[22m::abort(...)\\n\"},{\"type\":2,\"output\":\"Execution halted\\n\"},{\"type\":2,\"output\":\"\\nExited with status 1.\\n\\n\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"ignoreCase\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOn\":[],\"matchOff\":[],\"replaceMatchOn\":[],\"replaceMatchOff\":[]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"
