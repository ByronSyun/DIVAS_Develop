#' Center a Matrix by Rows, Columns, or Both
#'
#' This function centers a matrix by subtracting the row means, column means, or both, depending on the specified centering options. It is useful in data preprocessing to normalize data for further analysis.
#'
#' @param X A numeric matrix to be centered.
#' @param iColCent A logical value indicating whether to center by columns. If `TRUE`, the function subtracts the row means from each column.
#' @param iRowCent A logical value indicating whether to center by rows. If `TRUE`, the function subtracts the column means from each row.
#'
#' @return A centered matrix with the specified adjustments applied. If both `iColCent` and `iRowCent` are `TRUE`, the matrix will be centered by both rows and columns.
#' @export
#'
#' @examples
#' # Create a sample 3x3 matrix
#' X <- matrix(c(1, 2, 333, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = TRUE)
#'
#' # Center by columns only
#' MatCenterJP(X, iColCent = TRUE, iRowCent = FALSE)
#'
#' # Center by rows only
#' MatCenterJP(X, iColCent = FALSE, iRowCent = TRUE)
#'
#' # Center by both rows and columns
#' MatCenterJP(X, iColCent = TRUE, iRowCent = TRUE)
MatCenterJP <- function(X, iColCent, iRowCent) {

  d <- nrow(X)
  n <- ncol(X)
  outMat <- X
  if (iColCent) {
    outMat <- outMat - matrix(rowMeans(outMat), nrow = d, ncol = n, byrow = FALSE)
  }
  if (iRowCent) {
    outMat <- outMat - matrix(colMeans(outMat), nrow = d, ncol = n, byrow = TRUE)
  }
  return(outMat)
}
#
# ####################################test######################################
# # Sample data matrix
# X <- matrix(c(1, 2, 333, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = TRUE)
# print("Test matrix:")
# print(X)
#
# print("Centering by columns only:")
# print(MatCenterJP(X, iColCent = TRUE, iRowCent = FALSE))
#
# print("Centering by rows only:")
# print(MatCenterJP(X, iColCent = FALSE, iRowCent = TRUE))
#
# print("Centering by both rows and columns:")
# print(MatCenterJP(X, iColCent = TRUE, iRowCent = TRUE))
