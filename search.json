[{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 DIVAS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"guide demonstrates use DIVAS R package perform data integration provided toy dataset. DIVAS (Data Integration via Analysis Subspaces) identifies joint individual variation patterns across multiple data blocks (modalities). First, ensure DIVAS package dependencies installed. See main README.md installation instructions, especially regarding required CVXR version (0.99-7).","code":"# install if not have # install.packages(\"devtools\")  # Install DIVAS package from GitHub # devtools::install_github(\"ByronSyun/DIVAS_Develop\", ref = \"DIVAS-v1\")  # Or install from local folder # devtools::load_all(\"DIVAS-main\")  # Install the specified version of CVXR # devtools::install_version(\"CVXR\", version = \"0.99-7\", repos = \"http://cran.us.r-project.org\")  # For pkgdown, libraries are generally not needed here if the package is loaded, # # library(R.matlab) # # library(qs) # # library(DIVAS)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"the-toy-dataset-toydatathreeway-mat","dir":"Articles","previous_headings":"","what":"The Toy Dataset (toyDataThreeWay.mat)","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"toy dataset (toyDataThreeWay.mat) used test DIVAS original author. ’s stored MATLAB format. dataset contains variable named datablock, MATLAB cell array dimensions 1×3. Inside R, loading readMat(), becomes nested list structure three elements, containing data matrix. also includes dataname variable provides labels (“X1”, “X2”, “X3”) data blocks. three data matrices following dimensions: - Block 1 (X1): 200 × 400 matrix - Block 2 (X2): 400 × 400 matrix - Block 3 (X3): 10000 × 400 matrix matrices share common dimension (400 columns), representing 400 samples measured using three different modalities, modality captures different number features (200, 400, 10000 respectively). structure typical multi-modal data integration scenarios, samples profiled using different measurement techniques. Let’s load data: datablock object loaded .mat file needs converted simple list matrices, element list one data block (matrix). Now, datablock_list ready DIVAS analysis. contains three matrices.","code":"# library(R.matlab) # library(qs) # Assuming 'toyDataThreeWay.mat' is in your working directory or provide the full path # data <- readMat('toyDataThreeWay.mat')  # str(data$datablock) # datablock_list <- list( #   Block1 = data$datablock[1,1][[1]][[1]], #   Block2 = data$datablock[1,2][[1]][[1]], #   Block3 = data$datablock[1,3][[1]][[1]] # ) #  # print(paste(\"Block 1 dimensions:\", dim(datablock_list[[1]]))) # print(paste(\"Block 2 dimensions:\", dim(datablock_list[[2]]))) # print(paste(\"Block 3 dimensions:\", dim(datablock_list[[3]])))"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"running-divas-analysis","dir":"Articles","previous_headings":"","what":"Running DIVAS Analysis","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"core function DIVASmain. pass prepared list data blocks .","code":"# Run the main DIVAS function # Use default parameters for this example # divas_results <- DIVASmain(datablock_list) #  # # The result is a list containing various outputs # names(divas_results)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"divas-analysis-process-and-results-interpretation","dir":"Articles","previous_headings":"","what":"DIVAS Analysis Process and Results Interpretation","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"DIVAS analysis performed DIVASmain() consists three main steps:","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"step-1-signal-extraction","dir":"Articles","previous_headings":"DIVAS Analysis Process and Results Interpretation","what":"Step 1: Signal Extraction","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"first step extracts signal component data block separating noise. run DIVASmain(), ’ll see output similar : data block, step: Estimates noise level using random matrix theory Determines initial signal rank based singular values noise threshold Refines rank bootstrapping (sampling replacement) Calculates perturbation angle, indicates stable extracted signal subspace toy example, three data blocks : - Culled Rank = 3: algorithm detected three significant components data block - Perturbation Angles (11.8, 8.6, 2.8 X1, X2, X3): values indicate stability extracted signals. Smaller angles suggest stable signals, explaining X3 (10,000 features) stable signal extraction. output step, signal matrices, becomes input joint structure identification step.","code":"Signal estimation for X1 Datablock dimensions: 200 features; 400 samples  estimated noise = 19.96  Initial signal rank for X1 is 3. Progress Through Bootstrapped Matrices: ... Culled Rank is 3. Perturbation Angle for X1 is 11.8."},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"step-2-joint-structure-identification","dir":"Articles","previous_headings":"DIVAS Analysis Process and Results Interpretation","what":"Step 2: Joint Structure Identification","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"second step identifies joint individual structure components across data blocks. DIVAS uses convex optimization find subspaces shared different combinations data blocks, well subspaces unique individual blocks. step computationally intensive involves solving penalized optimization problem. running, ’ll see output similar : step, algorithm performs iterative convex optimization identify joint individual structures. structure key, ’ll see output like: output represents optimization progress : - Column 1: Iteration number - Columns 2-4: Slack variables data block (X1, X2, X3), measure constraint violations block - Column 5: Sum slack variables, representing total constraint violation - Column 6: Represents norm constraint slack variable (ensuring solution vector unit norm) - Column 7: Objective function change successive iterations (decrease objective value, first one negative infinity). algorithm using penalty method slack variables solve constrained optimization problem. iterations progress, observe: 1. Decreasing slack values (columns 2-5), indicating constraints better satisfied 2. Smaller changes objective function (column 7), indicating convergence. optimization stops change objective value sum slack variables fall specified thresholds, indicating stable solution found. Additionally, ’ll notice algorithm searches multiple directions within structure: sequence shows DIVAS finds basis vectors structure: joint structure (e.g., “structure shared among X1, X2, X3”), algorithm searches orthogonal directions sequentially. “Search Direction” represents attempt find one basis vector subspace corresponding particular structure. direction converges successfully (e.g., “Direction 1 converges”), algorithm checks additional dimensions might exist structure proceeds search another direction. direction fails converge (e.g., “Direction 2 converge”), algorithm concludes found significant dimensions current structure moves next structure type. process continues possible structures examined (individual structures block possible combinations joint structures). end joint structure identification step, DIVAS summarizes results like : summary shows rank (number dimensions) found joint structure. example, DIVAS identified: - 1 dimension shared among three data blocks (X1, X2, X3) - 1 dimension shared pair data blocks (X1-X2, X1-X3, X2-X3)","code":"Joint structure estimation for block: 1, 2, 3 Solving for structures with key: 1 Solving for structures with key: 2 Solving for structures with key: 3 Solving for structures with key: 4 ... Solving for structures with key: 7 Joint structure estimate for 1, 2, 3 complete. Find joint structure shared only among X1, X2, X3. Search Direction 1: 2 0.903132 0.953589 1.004182 2.990696 0.995363 -1000005.482454 3 0.796711 0.845383 0.894077 2.767596 0.885542 0.162749 4 0.701401 0.748269 0.795147 2.561086 0.786920 0.154449 ... Iteration 10 10 0.307495 0.345173 0.382800 1.602823 0.376174 0.111738 ... Iteration 20 20 0.041978 0.069198 0.096336 0.696604 0.091532 0.060549 ... Search Direction 1: ... Direction 1 converges. There is room for searching next direction. Continue...  Search Direction 2: ... Direction 2 does not converge. Stop searching current joint block.  Find joint structure shared only among X1, X2. Search Direction 1: ... Direction 1 converges. There is no room for searching next direction. Stop searching current joint block. There is no room for the next joint block. Stop searching. The rank of joint block among X1, X2, X3: 1 The rank of joint block among X1, X2: 1 The rank of joint block among X1, X3: 1 The rank of joint block among X2, X3: 1 Starting binary code 1"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"step-3-structure-reconstruction","dir":"Articles","previous_headings":"DIVAS Analysis Process and Results Interpretation","what":"Step 3: Structure Reconstruction","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"final step, DIVAS reconstructs estimated individual joint structures data block. reconstruction provides decomposition original signal joint individual components. algorithm outputs (explanations summarized together next Section):","code":"$jointBasisMap $matLoadings $matBlocks $keyIdxMap"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"interpreting-the-visualization-results","dir":"Articles","previous_headings":"","what":"Interpreting the Visualization Results","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"DIVAS analysis generates two main diagnostic plots provide critical insights identified structures:","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"joint-structure-loadings-diagnostics","dir":"Articles","previous_headings":"Interpreting the Visualization Results","what":"1. Joint Structure Loadings Diagnostics","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"plot shows: Rows: data block (DataBlock_1, DataBlock_2, DataBlock_3) Columns: Different structure types (3-Way = shared three blocks, 2-Way = pairwise joint structures, 1-Way = individual structures) Numbers cells: rank (dimensionality) structure type data block Colors: Blue 3-Way joint structures, Red 2-Way joint structures, Gray individual structures Angles: Values like “78.4”, “8.6” represent perturbation angles, smaller angles indicating stable structures Bottom row: Shows effective contribution structure type overall signal example plot: - data block 1-dimensional structure shared blocks (“3-Way” column) - data block participates 1-dimensional pairwise joint structures (“2-Way” columns) - None blocks show individual structures (zeros “1-Way” column) - perturbation angles vary across blocks, DataBlock_3 showing stable joint structure (smallest angle 2.8°)","code":"# These plots are generated by the DJIVEAngleDiagnosticJP function # plots <- DJIVEAngleDiagnosticJP(datablock_list, dataname, divas_results,  #                               randseed = 566, titlestr = \"Demo\")"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"joint-structure-score-diagnostics","dir":"Articles","previous_headings":"Interpreting the Visualization Results","what":"2. Joint Structure Score Diagnostics","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"plot similar loadings plot focuses sample space (scores) rather feature space (loadings). shows: joint individual structures manifest sample dimensions Principal angles (like “82”, “11.8”) identified structures random subspaces bottom row shows “Effective Number Cases” contribute structure Smaller angles plots indicate identified structures statistically significant distinct random variation. visualizations provide comprehensive view information shared across data blocks, helping researchers identify structures important reliable interpretation. Let’s examine key components divas_results object detail:","code":"# print(plots$score)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"joint-basis-map","dir":"Articles","previous_headings":"Interpreting the Visualization Results","what":"Joint Basis Map","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"jointBasisMap list containing estimated basis vectors (scores) identified structure:","code":"# names(divas_results$jointBasisMap) # dim(divas_results$jointBasisMap[[\"7\"]])"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"matrix-loadings","dir":"Articles","previous_headings":"Interpreting the Visualization Results","what":"Matrix Loadings","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"matLoadings component provides corresponding loadings structure: nested list structure contains loadings block structure. loadings show joint individual patterns expressed original feature space data block.","code":"# str(divas_results$matLoadings, max.level = 2)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"example-2-using-the-gnp-dataset","dir":"Articles","previous_headings":"","what":"Example 2: Using the GNP Dataset","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"addition toy dataset, can also demonstrate use DIVAS different type data format. following example uses dataset stored qs format.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"about-the-gnp-dataset","dir":"Articles","previous_headings":"Example 2: Using the GNP Dataset","what":"About the GNP Dataset","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"gnp_imputed.qs dataset contains multi-omics data organized list structure. loaded, provides: RNA: Gene expression data (8432 genes × 18 samples) PRO: Protein expression data (3156 proteins × 18 samples) MIC: MicroRNA expression data (283 miRNAs × 18 samples) gnp$metaData: data frame 18 rows (samples) 8 columns metadata, including information sample stage, donor, sex, age. three data matrices share samples (18 columns identical sample IDs), making perfect example multi-modal data integration DIVAS. data type (RNA, protein, miRNA) represents different “view” biological samples. run example, ’ll need qs package:","code":"# install.packages(\"qs\") # library(qs)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"loading-and-analyzing-the-gnp-dataset","dir":"Articles","previous_headings":"Example 2: Using the GNP Dataset","what":"Loading and Analyzing the GNP Dataset","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"","code":"# gnp <- qread(\"gnp_imputed.qs\") #  # datablock <- gnp$datablock # divasRes <- DIVASmain(datablock, nsim = 400, colCent = TRUE) #  # # Create names for the data blocks # dataname <- paste0(\"DataBlock_\", 1:length(datablock)) # plots <- DJIVEAngleDiagnosticJP(datablock, dataname, divasRes, 566, \"GNP Demo\")"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/DIVAS_User_Guide.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"DIVAS User Guide: Analysing the Toy Dataset","text":"Prothero, J., …, Marron J. S. (2024). Data integration via analysis subspaces (DIVAS). DIVAS R package. https://github.com/jiadongm/DIVAS. Klein, C., Hesse, S., Mao, J., Hadziahmetovic, ., et al. (2025). molecular atlas human granulopoiesis. https://www.researchsquare.com/article/rs-6184761/v1 GNP dataset provided Comprehensive Childhood Research Center Dr. von Hauner Children’s Hospital (Klein Lab). https://granulopoiesis.com/ detailed technical information DIVAS method, please refer primary publication (1). details R package implementation, please visit GitHub repository (DIVAS-v1 branch now) (2). GNP dataset used Example 2 human granulopoiesis atlas project (3,4).","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DIVAS Application Example: GNP Economic Data","text":"vignette, demonstrate apply DIVAS real-world dataset: GNP (Gross National Product) economic data. dataset contains quarterly economic measurements multiple countries, providing excellent example multi-modal data integration.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"dataset-description","dir":"Articles","previous_headings":"Introduction","what":"Dataset Description","title":"DIVAS Application Example: GNP Economic Data","text":"GNP dataset includes economic measurements several countries. analysis, ’ll divide measurements three data blocks: US Economic Indicators Japan Economic Indicators European Economic Indicators division allows us explore economic patterns shared unique across different regions.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"DIVAS Application Example: GNP Economic Data","text":"First, let’s load necessary packages:","code":"# Load DIVAS and other packages library(DIVAS) library(qs)       # For loading the .qs data format library(ggplot2) library(gridExtra) library(dplyr)  # Set random seed for reproducibility set.seed(123)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"data-loading-and-preparation","dir":"Articles","previous_headings":"","what":"Data Loading and Preparation","title":"DIVAS Application Example: GNP Economic Data","text":"Let’s load GNP dataset prepare DIVAS analysis:","code":"# Load GNP data data_path <- system.file(\"extdata\", \"gnp_imputed.qs\", package = \"DIVAS\")  # If the package isn't installed with data, use a local path: # data_path <- \"path/to/gnp_imputed.qs\"  if(file.exists(data_path)) {   gnp_data <- qs::qread(data_path)      # Print available variables   cat(\"Available variables in the GNP dataset:\\n\")   print(colnames(gnp_data))      # Create regional data blocks   us_vars <- c(\"US_GNP\", \"US_CPI\", \"US_M1\", \"US_TBILL\", \"US_UNEMP\")   japan_vars <- c(\"JP_GNP\", \"JP_CPI\", \"JP_M1\", \"JP_TBILL\")   europe_vars <- c(\"GER_GNP\", \"UK_GNP\", \"FR_GNP\", \"UK_CPI\", \"GER_TBILL\")      # Create data blocks   X1 <- as.matrix(gnp_data[, us_vars])   X2 <- as.matrix(gnp_data[, japan_vars])   X3 <- as.matrix(gnp_data[, europe_vars])      # Store in list   datablock <- list(X1 = X1, X2 = X2, X3 = X3)      # Display basic information about each data block   for (i in 1:length(datablock)) {     cat(sprintf(\"Data Block %d (%s): %d x %d\\n\",                  i,                  c(\"US\", \"Japan\", \"Europe\")[i],                 nrow(datablock[[i]]),                  ncol(datablock[[i]])))   } } else {   # Create synthetic economic data if the dataset is not available   message(\"GNP dataset not found. Creating synthetic economic data instead...\")      # Number of quarters   n <- 100      # Create timestamps (for plotting)   quarters <- seq(as.Date(\"1975-01-01\"), by = \"quarter\", length.out = n)      # Create shared economic cycle   set.seed(123)   global_trend <- sin(seq(0, 2*pi*2, length.out = n)) +                    0.5*sin(seq(0, 2*pi*8, length.out = n))      # US data (5 variables)   us_unique <- 0.7*sin(seq(0, 2*pi*1.5, length.out = n))   X1 <- matrix(0, n, 5)   for(i in 1:5) {     X1[,i] <- global_trend + us_unique + 0.3*rnorm(n)     # Add some variable-specific behavior     if(i == 2) X1[,i] <- X1[,i] + 0.5*cos(seq(0, 2*pi*3, length.out = n))     if(i == 4) X1[,i] <- X1[,i] - 0.4*sin(seq(0, 2*pi*5, length.out = n))   }   colnames(X1) <- c(\"US_GNP\", \"US_CPI\", \"US_M1\", \"US_TBILL\", \"US_UNEMP\")      # Japan data (4 variables)   japan_unique <- 0.6*sin(seq(0, 2*pi*1.2, length.out = n))   X2 <- matrix(0, n, 4)   for(i in 1:4) {     X2[,i] <- global_trend + japan_unique + 0.3*rnorm(n)     # Add some variable-specific behavior     if(i == 1) X2[,i] <- X2[,i] + 0.4*cos(seq(0, 2*pi*4, length.out = n))     if(i == 3) X2[,i] <- X2[,i] - 0.3*sin(seq(0, 2*pi*6, length.out = n))   }   colnames(X2) <- c(\"JP_GNP\", \"JP_CPI\", \"JP_M1\", \"JP_TBILL\")      # European data (5 variables)   europe_unique <- 0.5*sin(seq(0, 2*pi*1.8, length.out = n))   X3 <- matrix(0, n, 5)   for(i in 1:5) {     X3[,i] <- global_trend + europe_unique + 0.3*rnorm(n)     # Add some variable-specific behavior     if(i == 2) X3[,i] <- X3[,i] + 0.5*cos(seq(0, 2*pi*2.5, length.out = n))     if(i == 5) X3[,i] <- X3[,i] - 0.4*sin(seq(0, 2*pi*4.5, length.out = n))   }   colnames(X3) <- c(\"GER_GNP\", \"UK_GNP\", \"FR_GNP\", \"UK_CPI\", \"GER_TBILL\")      # Store in list   datablock <- list(X1 = X1, X2 = X2, X3 = X3)      # Display basic information about each data block   for (i in 1:length(datablock)) {     cat(sprintf(\"Data Block %d (%s): %d x %d\\n\",                  i,                  c(\"US\", \"Japan\", \"Europe\")[i],                 nrow(datablock[[i]]),                  ncol(datablock[[i]])))   } }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"preliminary-exploration","dir":"Articles","previous_headings":"","what":"Preliminary Exploration","title":"DIVAS Application Example: GNP Economic Data","text":"running DIVAS, let’s briefly explore data get sense relationships variables:","code":"# Create a function to plot time series from each data block plot_timeseries <- function(data_block, title, cols = NULL) {   if(is.null(cols)) cols <- 1:min(3, ncol(data_block))      # Create a data frame for plotting   df <- data.frame(     Time = 1:nrow(data_block),     data_block[, cols, drop = FALSE]   )      # Reshape for ggplot   df_long <- tidyr::pivot_longer(df, -Time,                                  names_to = \"Variable\",                                  values_to = \"Value\")      # Create plot   p <- ggplot(df_long, aes(x = Time, y = Value, color = Variable)) +     geom_line() +     labs(title = title,          x = \"Quarter\",          y = \"Value (Standardized)\") +     theme_minimal() +     theme(legend.position = \"bottom\")      return(p) }  # Plot sample time series from each block p1 <- plot_timeseries(scale(datablock[[1]]), \"US Economic Indicators\") p2 <- plot_timeseries(scale(datablock[[2]]), \"Japan Economic Indicators\") p3 <- plot_timeseries(scale(datablock[[3]]), \"European Economic Indicators\")  # Arrange plots gridExtra::grid.arrange(p1, p2, p3, ncol = 1)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"divas-analysis","dir":"Articles","previous_headings":"","what":"DIVAS Analysis","title":"DIVAS Application Example: GNP Economic Data","text":"Now, let’s run DIVAS analysis economic data blocks:","code":"# Run DIVAS analysis with column centering # Use 500 bootstrap simulations for more stable results result <- DIVASmain(datablock, nsim = 500, colCent = TRUE)  # Display the estimated rank structure print(result$estRank)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"results-interpretation","dir":"Articles","previous_headings":"","what":"Results Interpretation","title":"DIVAS Application Example: GNP Economic Data","text":"Let’s interpret key findings:","code":"# Extract information about joint structures cat(\"Joint structure summary:\\n\") cat(\"- Structure shared across all three regions:\", sum(result$estRank$rank[1,]), \"\\n\") cat(\"- Structure shared between US and Japan:\", sum(result$estRank$rank[2,]), \"\\n\") cat(\"- Structure shared between US and Europe:\", sum(result$estRank$rank[3,]), \"\\n\") cat(\"- Structure shared between Japan and Europe:\", sum(result$estRank$rank[4,]), \"\\n\") cat(\"- Structure unique to US:\", sum(result$estRank$rank[5,]), \"\\n\") cat(\"- Structure unique to Japan:\", sum(result$estRank$rank[6,]), \"\\n\") cat(\"- Structure unique to Europe:\", sum(result$estRank$rank[7,]), \"\\n\")"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"DIVAS Application Example: GNP Economic Data","text":"Let’s visualize joint structures identified DIVAS:","code":"# Create data block names for plotting dataname <- c(\"US\", \"Japan\", \"Europe\")  # Generate diagnostic plots plots <- DJIVEAngleDiagnosticJP(datablock, dataname, result, 123, \"GNP Economic Data\")  # Display the loadings plot plots$loadings # Display the scores plot plots$scores"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"analysis-of-shared-economic-patterns","dir":"Articles","previous_headings":"","what":"Analysis of Shared Economic Patterns","title":"DIVAS Application Example: GNP Economic Data","text":"DIVAS analysis identified shared unique economic patterns across regions. Let’s delve deeper patterns might represent:","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"global-economic-patterns","dir":"Articles","previous_headings":"Analysis of Shared Economic Patterns","what":"Global Economic Patterns","title":"DIVAS Application Example: GNP Economic Data","text":"","code":"# Reconstruct data based on shared structure across all regions if(exists(\"result$dimsdir$JCdimdir\")) {   # Extract joint components   JC_loadings <- result$dimsdir$JCdimdir      # Create a df for the global shared pattern   if(length(JC_loadings) > 0 && sum(result$estRank$rank[1,]) > 0) {     # This extracts the shared component across all three blocks     shared_pattern <- result$dimsdir$JC_score          # Plot the global pattern     df_global <- data.frame(       Time = 1:nrow(shared_pattern),       Pattern = shared_pattern     )          ggplot(df_global, aes(x = Time, y = Pattern)) +       geom_line() +       labs(title = \"Global Economic Pattern Shared Across All Regions\",            x = \"Quarter\",            y = \"Score\") +       theme_minimal()   } else {     cat(\"No significant global pattern found across all three regions.\\n\")   } } else {   cat(\"Joint component information not available in the results.\\n\") }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"regional-economic-interactions","dir":"Articles","previous_headings":"Analysis of Shared Economic Patterns","what":"Regional Economic Interactions","title":"DIVAS Application Example: GNP Economic Data","text":"can also examine different pairs regions share economic patterns:","code":"# Check if we have pairwise shared patterns if(exists(\"result$dimsdir$JPCdimdir\")) {   # Extract pairwise joint components   JPC_loadings <- result$dimsdir$JPCdimdir      # Check US-Japan shared pattern   us_japan_idx <- 2  # Index for US-Japan in the structure   if(sum(result$estRank$rank[us_japan_idx,]) > 0) {     cat(\"US and Japan share significant economic patterns.\\n\")   } else {     cat(\"No significant shared patterns between US and Japan.\\n\")   }      # Check US-Europe shared pattern   us_europe_idx <- 3  # Index for US-Europe in the structure   if(sum(result$estRank$rank[us_europe_idx,]) > 0) {     cat(\"US and Europe share significant economic patterns.\\n\")   } else {     cat(\"No significant shared patterns between US and Europe.\\n\")   }      # Check Japan-Europe shared pattern   japan_europe_idx <- 4  # Index for Japan-Europe in the structure   if(sum(result$estRank$rank[japan_europe_idx,]) > 0) {     cat(\"Japan and Europe share significant economic patterns.\\n\")   } else {     cat(\"No significant shared patterns between Japan and Europe.\\n\")   } } else {   cat(\"Pairwise joint component information not available in the results.\\n\") }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"economic-insights-from-divas-analysis","dir":"Articles","previous_headings":"","what":"Economic Insights from DIVAS Analysis","title":"DIVAS Application Example: GNP Economic Data","text":"DIVAS analysis economic data US, Japan, Europe reveals several key insights: Global Economic Trends: shared structure across three regions suggests existence global economic trends affect economies, global business cycles international economic shocks. Regional Dependencies: pairwise shared structures indicate stronger economic interdependencies certain regions, explained trade relationships, similar monetary policies, synchronized business cycles. Regional Uniqueness: individual structures unique region reflect economic patterns driven region-specific factors, domestic policies, regional economic conditions, structural differences economies. insights demonstrate power DIVAS uncover meaningful patterns multi-modal economic data, providing researchers policymakers deeper understanding different economies relate one another.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"DIVAS Application Example: GNP Economic Data","text":"vignette, ’ve demonstrated apply DIVAS analyze economic data across different regions. DIVAS approach enables us : Identify shared economic patterns across multiple regions Quantify strength economic interdependencies pairs regions Isolate region-specific economic patterns analytical framework valuable economic research, policy analysis, forecasting, provides structured way decompose complex economic relationships interpretable components. approach can extended domains, multi-omics data biomedical research, environmental data climate studies, social science data demographic analyses.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/application_example.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"DIVAS Application Example: GNP Economic Data","text":"Prothero, J., et al. (2024). Data integration via analysis subspaces (DIVAS). Stock, J.H., & Watson, M.W. (2016). Dynamic factor models, factor-augmented vector autoregressions, structural vector autoregressions macroeconomics. Handbook macroeconomics (Vol. 2, pp. 415-525). Elsevier.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"ways-to-contribute","dir":"Articles","previous_headings":"","what":"Ways to Contribute","title":"Contributing to DIVAS","text":"several ways can contribute DIVAS project: Report bugs: find bug, please report creating issue GitHub repository. Suggest features: idea new feature? Share creating issue labeled “feature request.” Improve documentation: Help us improve documentation fixing typos, clarifying explanations, adding examples. Contribute code: Add new features, fix bugs, optimize existing code. Share examples: Create example scripts showcase DIVAS real-world applications.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"code-contribution-guidelines","dir":"Articles","previous_headings":"","what":"Code Contribution Guidelines","title":"Contributing to DIVAS","text":"’d like contribute code DIVAS, please follow steps: Fork repository GitHub account. Create branch changes: Make changes following coding style guidelines (see ). Add tests new features bug fixes. Run tests ensure changes don’t break existing functionality: Document code using roxygen2 comments update vignettes necessary. Submit pull request clear description changes.","code":"git checkout -b feature/your-feature-name devtools::test()"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"coding-style-guidelines","dir":"Articles","previous_headings":"","what":"Coding Style Guidelines","title":"Contributing to DIVAS","text":"follow tidyverse style guide R code. Key points include: Use 2 spaces indentation Limit lines 80 characters Use snake_case variable function names Document exported functions roxygen2 Include examples function documentation","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"Contributing to DIVAS","text":"Good documentation crucial usability package. contributing: Document exported functions roxygen2 Include examples function documentation Update vignettes reflect changes functionality Keep README date","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"Contributing to DIVAS","text":"use testthat package testing. Please ensure: new features corresponding tests bug fixes include tests caught bug tests pass submitting contribution run tests locally:","code":"devtools::test()"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"submitting-a-pull-request","dir":"Articles","previous_headings":"","what":"Submitting a Pull Request","title":"Contributing to DIVAS","text":"’re ready submit changes: Push branch fork: Go DIVAS repository create pull request. Include clear title description changes. Reference related issues using GitHub issue number (e.g., “Fixes #42”).","code":"git push origin feature/your-feature-name"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"code-of-conduct","dir":"Articles","previous_headings":"","what":"Code of Conduct","title":"Contributing to DIVAS","text":"Please note DIVAS project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/contributing.html","id":"questions","dir":"Articles","previous_headings":"","what":"Questions?","title":"Contributing to DIVAS","text":"questions contributing, please open issue ’ll happy help!","code":""},{"path":[]},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/developers.html","id":"core-team","dir":"Articles","previous_headings":"Developers","what":"Core Team","title":"DIVAS Developers","text":"Contributes R implementation DIVAS mathematical modeling. Maintains R package develops documentation infrastructure.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/developers.html","id":"contributors","dir":"Articles","previous_headings":"Developers","what":"Contributors","title":"DIVAS Developers","text":"Lead author DIVAS methodology paper. Contributing author DIVAS methodology. Contributing author DIVAS methodology.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/developers.html","id":"join-the-team","dir":"Articles","previous_headings":"Developers","what":"Join the Team","title":"DIVAS Developers","text":"’re always looking contributors can help improve DIVAS package. ’re interested contributing, check contributing guidelines get touch team.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"highlights","dir":"Articles","previous_headings":"","what":"Highlights","title":"Getting Started with DIVAS","text":"Multi-modal data integration across different datasets Identification joint structure across data blocks Signal extraction noise filtering Visualization shared patterns across different datasets","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with DIVAS","text":"DIVAS (Data Integration via Analysis Subspaces) powerful methodology integrating analyzing multiple high-dimensional datasets. Based approach proposed Prothero et al. (2024), DIVAS enables researchers identify shared patterns structures across diverse data sources. method works three key steps: Signal Extraction: Identifying significant signals dataset filtering noise Joint Structure Identification: Finding shared patterns across multiple datasets Structure Reconstruction: Reconstructing original data based identified structures vignette, ’ll demonstrate use DIVAS analyze toy dataset three data blocks.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting Started with DIVAS","text":"First, let’s load necessary packages:","code":"# Load DIVAS library(DIVAS)  # Visualization packages library(ggplot2) library(gridExtra)  # Set a random seed for reproducibility set.seed(566)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Getting Started with DIVAS","text":"example, ’ll use simple toy dataset demonstrates DIVAS functionality:","code":"# Create synthetic data # Parameters n <- 100  # Number of samples (rows) d1 <- 50  # Dimensions for first block (columns) d2 <- 50  # Dimensions for second block (columns) d3 <- 50  # Dimensions for third block (columns)  # Create shared structure shared_score <- matrix(rnorm(n * 2), n, 2)  # Create individual structures unique_score1 <- matrix(rnorm(n * 1), n, 1) unique_score2 <- matrix(rnorm(n * 2), n, 2) unique_score3 <- matrix(rnorm(n * 1), n, 1)  # Create loadings shared_load1 <- matrix(rnorm(d1 * 2), d1, 2) shared_load2 <- matrix(rnorm(d2 * 2), d2, 2) shared_load3 <- matrix(rnorm(d3 * 2), d3, 2)  unique_load1 <- matrix(rnorm(d1 * 1), d1, 1) unique_load2 <- matrix(rnorm(d2 * 2), d2, 2) unique_load3 <- matrix(rnorm(d3 * 1), d3, 1)  # Create data blocks with noise noise_level <- 0.5 X1 <- shared_score %*% t(shared_load1) + unique_score1 %*% t(unique_load1) +    noise_level * matrix(rnorm(n * d1), n, d1) X2 <- shared_score %*% t(shared_load2) + unique_score2 %*% t(unique_load2) +    noise_level * matrix(rnorm(n * d2), n, d2) X3 <- shared_score %*% t(shared_load3) + unique_score3 %*% t(unique_load3) +    noise_level * matrix(rnorm(n * d3), n, d3)  # Store in list datablock <- list(X1 = X1, X2 = X2, X3 = X3)  # Display basic information about each data block for (i in 1:length(datablock)) {   cat(sprintf(\"Data Block %d dimensions: %d x %d\\n\",                i, nrow(datablock[[i]]), ncol(datablock[[i]]))) }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"divas-analysis","dir":"Articles","previous_headings":"","what":"DIVAS Analysis","title":"Getting Started with DIVAS","text":"Now, let’s run DIVAS analysis data blocks: output shows estimated rank type structure: 1. Structure shared across three blocks 2. Structure shared blocks 1-2 3. Structure shared blocks 1-3 4. Structure shared blocks 2-3 5. Structure unique block 1 6. Structure unique block 2 7. Structure unique block 3","code":"# Run DIVAS analysis result <- DIVASmain(datablock, nsim = 300, colCent = TRUE)  # Display the estimated rank structure print(result$estRank)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Getting Started with DIVAS","text":"DIVAS provides diagnostic tools visualize identified structures: diagnostic plots help us understand: Loadings Plot: Shows variables data block contribute identified structures Scores Plot: Shows samples/observations relate identified structures","code":"# Create data block names for plotting dataname <- paste0(\"DataBlock_\", 1:length(datablock))  # Generate diagnostic plots plots <- DJIVEAngleDiagnosticJP(datablock, dataname, result, 566, \"Toy Data Example\")  # Display the loadings plot plots$loadings # Display the scores plot plots$scores"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"analysis-of-results","dir":"Articles","previous_headings":"","what":"Analysis of Results","title":"Getting Started with DIVAS","text":"Let’s interpret key findings:","code":"# Extract information about joint structures cat(\"Joint structure summary:\\n\") cat(\"- Structure shared across all three blocks:\", sum(result$estRank$rank[1,]), \"\\n\") cat(\"- Structure shared between blocks 1-2:\", sum(result$estRank$rank[2,]), \"\\n\") cat(\"- Structure shared between blocks 1-3:\", sum(result$estRank$rank[3,]), \"\\n\") cat(\"- Structure shared between blocks 2-3:\", sum(result$estRank$rank[4,]), \"\\n\") cat(\"- Structure unique to block 1:\", sum(result$estRank$rank[5,]), \"\\n\") cat(\"- Structure unique to block 2:\", sum(result$estRank$rank[6,]), \"\\n\") cat(\"- Structure unique to block 3:\", sum(result$estRank$rank[7,]), \"\\n\")"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"data-reconstruction","dir":"Articles","previous_headings":"","what":"Data Reconstruction","title":"Getting Started with DIVAS","text":"DIVAS can reconstruct original data blocks based identified structures: reconstruction error indicates well identified structures capture information original data.","code":"# Reconstruct data blocks reconstructed <- DJIVEReconstructMJ(datablock, result$dimsdir)  # Calculate reconstruction accuracy calc_rmse <- function(actual, predicted) {   sqrt(mean((actual - predicted)^2)) }  cat(\"Reconstruction RMSE:\\n\") for (i in 1:length(datablock)) {   rmse <- calc_rmse(datablock[[i]], reconstructed[[i]])   cat(sprintf(\"Block %d: %.6f\\n\", i, rmse)) }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"applications-of-divas","dir":"Articles","previous_headings":"","what":"Applications of DIVAS","title":"Getting Started with DIVAS","text":"DIVAS can applied many types multi-modal data:","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Getting Started with DIVAS","text":"vignette, ’ve demonstrated use DIVAS : Load prepare multi-block data Run DIVAS analysis Visualize interpret results Reconstruct data based identified structures DIVAS provides powerful framework integrating analyzing multiple high-dimensional datasets, enabling researchers discover shared patterns might apparent analyzing dataset separately.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/articles/getting_started.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting Started with DIVAS","text":"Prothero, J., et al. (2024). Data integration via analysis subspaces (DIVAS).","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jiadong Mao. Author, maintainer. Yinuo Sun. Author.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mao J, Sun Y (2025). DIVAS: Data Integration via Analysis Subspaces. R package version 0.1.0, https://github.com/ByronSyun/DIVAS_Develop.","code":"@Manual{,   title = {DIVAS: Data Integration via Analysis of Subspaces},   author = {Jiadong Mao and Yinuo Sun},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/ByronSyun/DIVAS_Develop}, }"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVAS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"DIVAS: Data Integration via Analysis of Subspaces — DIVAS-package","title":"DIVAS: Data Integration via Analysis of Subspaces — DIVAS-package","text":"Based 'Data integration via analysis subspaces (DIVAS)' Prothero et al. (2024), package implements DIVAS methodology multi-modal data integration. package provides tools signal extraction, noise estimation joint structure identification high-dimensional datasets, useful multi-omics complex data types.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVAS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DIVAS: Data Integration via Analysis of Subspaces — DIVAS-package","text":"Maintainer: Jiadong Mao chiatungmao@gmail.com (ORCID) Authors: Yinuo Sun yinuo.sun.1@unimelb.edu.au","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":null,"dir":"Reference","previous_headings":"","what":"Data integration via analysis of subspaces — DIVASmain","title":"Data integration via analysis of subspaces — DIVASmain","text":"Main function DIVAS analysis. Given list data blocks matched columns (samples), return identified joint structure diagnostic plots.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data integration via analysis of subspaces — DIVASmain","text":"","code":"DIVASmain(   datablock,   nsim = 400,   iprint = TRUE,   colCent = FALSE,   rowCent = FALSE,   figdir = NULL )"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data integration via analysis of subspaces — DIVASmain","text":"datablock list matrices number columns (samples). nsim Number bootstrap resamples inferring angle bounds. iprint Whether print diagnostic figures. colCent Whether column centre input data blocks. rowCent Whether row centre input data blocks. figdir NULL, diagnostic plots saved directory.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data integration via analysis of subspaces — DIVASmain","text":"list containing DIVAS integration results. important ones include matBlocks List scores representing shared partially shared joint structures. matLoadings List loadings linking features data block scores. keyIdxMap Mapping indices previous lists data blocks. See Details explanations.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data integration via analysis of subspaces — DIVASmain","text":"DIVASmain returns list containing important information returned DIVAS algorithm. users, important ones scores (matBlocks), loadings (matLoadings) index book (keyIdxMap) explaining joint structures score loading matrix correpsond . matBlocks list containing scores. element matBlocks indexed number. example, suppose one indices \"7\", keyIdxMap[[\"7\"]] contains indices data blocks corresponding index 7. , matBlocks[[\"7\"]] contains scores samples representing joint structures data blocks keyIdxMap[[\"7\"]].","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DIVASmain.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data integration via analysis of subspaces — DIVASmain","text":"Prothero, J., Jiang, M., Hannig, J., Tran-Dinh, Q., Ackerman, . Marron, J. S. (2024). Data integration via analysis subspaces (DIVAS). Test.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEAngleDiagnosticJP.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Diagnostic Plots for DJIVE Analysis — DJIVEAngleDiagnosticJP","title":"Create Diagnostic Plots for DJIVE Analysis — DJIVEAngleDiagnosticJP","text":"Create Diagnostic Plots DJIVE Analysis","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEAngleDiagnosticJP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Diagnostic Plots for DJIVE Analysis — DJIVEAngleDiagnosticJP","text":"","code":"DJIVEAngleDiagnosticJP(datablock, dataname, outstruct, randseed, titlestr)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEAngleDiagnosticJP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Diagnostic Plots for DJIVE Analysis — DJIVEAngleDiagnosticJP","text":"datablock List data blocks dataname Vector data block names outstruct Output structure DJIVE analysis randseed Random seed reproducibility titlestr Title string plots","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEAngleDiagnosticJP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Diagnostic Plots for DJIVE Analysis — DJIVEAngleDiagnosticJP","text":"List three ggplot objects: rank, score, loading plots","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEJointStrucEstimateJP.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate full and partially shared joint structures Establish a DC programming problem to estimate each partially joint structure using Penalty CCP algorithm. — DJIVEJointStrucEstimateJP","title":"Estimate full and partially shared joint structures Establish a DC programming problem to estimate each partially joint structure using Penalty CCP algorithm. — DJIVEJointStrucEstimateJP","text":"Estimate full partially shared joint structures Establish DC programming problem estimate partially joint structure using Penalty CCP algorithm.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEJointStrucEstimateJP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate full and partially shared joint structures Establish a DC programming problem to estimate each partially joint structure using Penalty CCP algorithm. — DJIVEJointStrucEstimateJP","text":"","code":"DJIVEJointStrucEstimateJP(   VBars,   UBars,   phiBars,   psiBars,   rBars,   dataname = NULL,   theta0 = 45,   optArgin = list(),   iprint = F,   figdir = NULL )"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEJointStrucEstimateJP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate full and partially shared joint structures Establish a DC programming problem to estimate each partially joint structure using Penalty CCP algorithm. — DJIVEJointStrucEstimateJP","text":"VBars List adjusted signal row spaces data block. UBars List adjusted signal column spaces data block. phiBars Vector adjusted perturbation angles data matrix. psiBars Vector loadings perturbation angles data matrix. rBars Vector adjusted signal ranks data block. dataname Names data blocks. theta0 Initial value angle. optArgin Aditional tuning parameters optimisation. iprint Print figures . figdir `NULL`, parsed directory storing figures.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEJointStrucEstimateJP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate full and partially shared joint structures Establish a DC programming problem to estimate each partially joint structure using Penalty CCP algorithm. — DJIVEJointStrucEstimateJP","text":"list containing: outMap Mapping joint block index set estimated partially shared structure. keyIdxMap Mapping joint block index data blocks. anglesMap Mapping joint block index angle estimates. jointBlockOrder Record order joint blocks.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEReconstructMJ.html","id":null,"dir":"Reference","previous_headings":"","what":"DJIVEReconstructMJ - Reconstruct joint blocks from data blocks — DJIVEReconstructMJ","title":"DJIVEReconstructMJ - Reconstruct joint blocks from data blocks — DJIVEReconstructMJ","text":"function reconstructs joint blocks provided data matrices using estimated partially shared structures.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEReconstructMJ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DJIVEReconstructMJ - Reconstruct joint blocks from data blocks — DJIVEReconstructMJ","text":"","code":"DJIVEReconstructMJ(   datablock,   dataname,   outMap,   keyIdxMap,   jointBlockOrder,   doubleCenter )"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEReconstructMJ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DJIVEReconstructMJ - Reconstruct joint blocks from data blocks — DJIVEReconstructMJ","text":"datablock List d_k x n data matrices. dataname Vector data matrix names. outMap List mapping block index set estimated partially shared structure. keyIdxMap List mapping joint block index data blocks. jointBlockOrder Vector record joint block order. doubleCenter Flag indicating whether perform double centering.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVEReconstructMJ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DJIVEReconstructMJ - Reconstruct joint blocks from data blocks — DJIVEReconstructMJ","text":"list containing joint basis map, loadings, joint blocks.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVESignalExtractJP.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal Matrix Extraction for DIVAS — DJIVESignalExtractJP","title":"Signal Matrix Extraction for DIVAS — DJIVESignalExtractJP","text":"Extracts signal matrix data block, estimates signal ranks, adjusts perturbation angles data matrix.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVESignalExtractJP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal Matrix Extraction for DIVAS — DJIVESignalExtractJP","text":"","code":"DJIVESignalExtractJP(   datablock,   nsim = 400,   iplot = FALSE,   colCent = F,   rowCent = F,   cull = 0.382,   noisepercentile = rep(0.5, length(datablock)),   noiselvls = NULL )"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVESignalExtractJP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal Matrix Extraction for DIVAS — DJIVESignalExtractJP","text":"datablock list feature sample (eg gene cell) data matrices, matrix corresponding data block. Matrices number columns (mathced samples). nsim integer specifying number bootstrap samples. iplot logical indicate whether plots generated visualizing singular value shrinkage. colCent logical indicating whether columns centered. rowCent logical indicating whether rows centered. cull numeric value culling parameter adjust signal rank. noisepercentile numeric vector specifying percentiles used noise estimation data block. noiselvls list specifying noise levels data block; NULL, noise levels estimated internally.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/DJIVESignalExtractJP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signal Matrix Extraction for DIVAS — DJIVESignalExtractJP","text":"list containing: VBars List adjusted signal row spaces data block. UBars List adjusted signal column spaces data block. phiBars Vector adjusted perturbation angles data matrix. psiBars Vector loadings perturbation angles data matrix. rBars Vector adjusted signal ranks data block. EHats List estimated noise matrices data block. singVals List singular values shrinkage data block. singValsHat List singular values shrinkage data block. rSteps List signal rank adjustment steps data block. VVHatCacheBars List cached VVHat matrices bootstrap samples. UUHatCacheBars List cached UUHat matrices bootstrap samples.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatCenterJP.html","id":null,"dir":"Reference","previous_headings":"","what":"Center a Matrix by Rows, Columns, or Both — MatCenterJP","title":"Center a Matrix by Rows, Columns, or Both — MatCenterJP","text":"function centers matrix subtracting row means, column means, , depending specified centering options. useful data preprocessing normalize data analysis.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatCenterJP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center a Matrix by Rows, Columns, or Both — MatCenterJP","text":"","code":"MatCenterJP(X, iColCent = F, iRowCent = F)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatCenterJP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center a Matrix by Rows, Columns, or Both — MatCenterJP","text":"X numeric matrix centered. iColCent logical value indicating whether center columns. `TRUE`, function subtracts row means column. iRowCent logical value indicating whether center rows. `TRUE`, function subtracts column means row.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatCenterJP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center a Matrix by Rows, Columns, or Both — MatCenterJP","text":"centered matrix specified adjustments applied. `iColCent` `iRowCent` `TRUE`, matrix centered rows columns.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatReconstructMJ.html","id":null,"dir":"Reference","previous_headings":"","what":"MatReconstructMJ - Reconstruct joint block matrices and their loadings from data — MatReconstructMJ","title":"MatReconstructMJ - Reconstruct joint block matrices and their loadings from data — MatReconstructMJ","text":"MatReconstructMJ - Reconstruct joint block matrices loadings data","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatReconstructMJ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MatReconstructMJ - Reconstruct joint block matrices and their loadings from data — MatReconstructMJ","text":"","code":"MatReconstructMJ(X, matJointV, matJointOrder, matJointRanks)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatReconstructMJ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MatReconstructMJ - Reconstruct joint block matrices and their loadings from data — MatReconstructMJ","text":"X d x n data matrix matJointV n x sum(r_t) joint structure basis matrix matJointOrder List keeps order joint blocks matJointV matJointRanks Vector containing rank joint block matJointV","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatReconstructMJ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MatReconstructMJ - Reconstruct joint block matrices and their loadings from data — MatReconstructMJ","text":"list containing `matBlockMap` (joint block matrix map) `matLoadingMap` (joint block loading map)","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatSignalExtractJP.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Signal Extraction — MatSignalExtractJP","title":"Matrix Signal Extraction — MatSignalExtractJP","text":"`MatSignalExtractJP` function performs signal extraction data matrix estimate signal rank, signal row space, corresponding perturbation angles, noise matrix. adjusts signals based random direction angles uses bootstrap estimation refine results.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatSignalExtractJP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Signal Extraction — MatSignalExtractJP","text":"","code":"MatSignalExtractJP(   X,   matName = NULL,   nsim = 400,   colCent = F,   rowCent = F,   cull = 0.382,   percentile = 0.5,   noiselvl = NULL )"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatSignalExtractJP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Signal Extraction — MatSignalExtractJP","text":"X numeric matrix (d x n) containing data analyzed. Must contain `NA` values. matName string representing name matrix, used logging purposes. nsim integer specifying number bootstrap samples used estimation process. colCent logical value indicating whether center columns matrix. Default `FALSE`. rowCent logical value indicating whether center rows matrix. Default `FALSE`. cull numeric value controlling culling process signal extraction. Default `0.5`. percentile numeric value representing percentile estimating noise level. noiselvl Optional. noise level parameter can either numeric value 'ks' use `ksOpt` function noise level estimation. provided, optimal shrinkage method used.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MatSignalExtractJP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Signal Extraction — MatSignalExtractJP","text":"list containing: VBar Matrix representing adjusted signal row space. UBar Matrix representing adjusted signal column space. phiBar Numeric value adjusted perturbation angle. psiBar Numeric value loadings perturbation angle. rBar Integer representing adjusted signal rank. EHat Matrix representing estimated noise. singVals Vector singular values shrinkage. singValsHat Vector singular values shrinkage. rSteps List steps used signal rank adjustment. VVHatCacheBar List matrices bootstrap validation steps. UUHatCacheBar List matrices bootstrap validation steps.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MedianMarcenkoPastur.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","title":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","text":"function estimates median Marčenko-Pastur distribution given ratio parameter beta. Marčenko-Pastur distribution describes asymptotic behavior eigenvalues large random matrices widely used random matrix theory statistics noise estimation signal processing.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MedianMarcenkoPastur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","text":"","code":"MedianMarcenkoPastur(beta)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MedianMarcenkoPastur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","text":"beta numeric value 0 1 representing aspect ratio matrix (n/d), n number columns d number rows. ratio defines shape Marčenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MedianMarcenkoPastur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","text":"numeric value representing estimated median Marčenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/MedianMarcenkoPastur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Median of the Marčenko-Pastur Distribution — MedianMarcenkoPastur","text":"function iteratively narrows interval containing median Marčenko-Pastur distribution evaluating distribution function interval sufficiently small. bounds distribution defined (1 - sqrt(beta))^2 (1 + sqrt(beta))^2.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/PercentileMarcenkoPastur.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentile of the Marcenko-Pastur Distribution — PercentileMarcenkoPastur","title":"Percentile of the Marcenko-Pastur Distribution — PercentileMarcenkoPastur","text":"function calculates specified percentile Marcenko-Pastur distribution, used random matrix theory model distribution singular values large random matrices. adjusts percentile calculation based shape parameter `beta`.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/PercentileMarcenkoPastur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentile of the Marcenko-Pastur Distribution — PercentileMarcenkoPastur","text":"","code":"PercentileMarcenkoPastur(beta, perc)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/PercentileMarcenkoPastur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentile of the Marcenko-Pastur Distribution — PercentileMarcenkoPastur","text":"beta numeric value representing shape parameter Marcenko-Pastur distribution. 0 1. perc numeric value 0 1, representing desired percentile Marcenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/PercentileMarcenkoPastur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentile of the Marcenko-Pastur Distribution — PercentileMarcenkoPastur","text":"numeric value representing calculated percentile Marcenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/acosd.html","id":null,"dir":"Reference","previous_headings":"","what":"Arccosine in Degrees — acosd","title":"Arccosine in Degrees — acosd","text":"`acosd` function computes inverse cosine (arccosine) numeric value converts result radians degrees.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/acosd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arccosine in Degrees — acosd","text":"","code":"acosd(x)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/acosd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arccosine in Degrees — acosd","text":"x numeric value vector. input within range [-1, 1], values outside range produce NaN values.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/acosd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arccosine in Degrees — acosd","text":"numeric value vector representing arccosine input, expressed degrees.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/incMarPas.html","id":null,"dir":"Reference","previous_headings":"","what":"Incomplete Marčenko-Pastur Distribution Function — incMarPas","title":"Incomplete Marčenko-Pastur Distribution Function — incMarPas","text":"Computes incomplete Marčenko-Pastur distribution function, used estimating noise levels.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/incMarPas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incomplete Marčenko-Pastur Distribution Function — incMarPas","text":"","code":"incMarPas(x0, beta, gamma)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/incMarPas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incomplete Marčenko-Pastur Distribution Function — incMarPas","text":"x0 numeric value representing lower limit integration. beta numeric value indicating ratio columns rows data matrix. gamma numeric value specifying power function raised integration.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/incMarPas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incomplete Marčenko-Pastur Distribution Function — incMarPas","text":"numeric value integrated Marčenko-Pastur function.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/ksOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal Shrinkage Estimation using Kolmogorov-Smirnov Criterion — ksOpt","title":"Optimal Shrinkage Estimation using Kolmogorov-Smirnov Criterion — ksOpt","text":"function estimates optimal shrinkage parameter singular values using Kolmogorov-Smirnov (KS) criterion, helps identify noise levels high-dimensional data.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/ksOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal Shrinkage Estimation using Kolmogorov-Smirnov Criterion — ksOpt","text":"","code":"ksOpt(singVals, betaShrinkage)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/ksOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal Shrinkage Estimation using Kolmogorov-Smirnov Criterion — ksOpt","text":"singVals numeric vector singular values data matrix. betaShrinkage numeric value representing aspect ratio data matrix (ratio columns rows vice versa).","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/ksOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal Shrinkage Estimation using Kolmogorov-Smirnov Criterion — ksOpt","text":"numeric value representing estimated optimal noise level (sigma) based KS criterion.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optimal_shrinkage.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal Shrinkage of Singular Values — optimal_shrinkage","title":"Optimal Shrinkage of Singular Values — optimal_shrinkage","text":"`optimal_shrinkage` function performs optimal shrinkage singular values based specified loss function estimated noise level. function supports three types loss functions: Frobenius (\"fro\"), operator norm (\"op\"), nuclear norm (\"nuc\").","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optimal_shrinkage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal Shrinkage of Singular Values — optimal_shrinkage","text":"","code":"optimal_shrinkage(singvals, beta, loss, percentile, sigma)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optimal_shrinkage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal Shrinkage of Singular Values — optimal_shrinkage","text":"singvals numeric vector singular values shrunk. beta numeric value representing ratio dimensions (min(n, d) / max(n, d)), n d dimensions matrix. loss string specifying loss function used shrinkage. Options \"fro\" (Frobenius norm), \"op\" (operator norm), \"nuc\" (nuclear norm). percentile numeric value representing percentile used noise level estimation `sigma` provided. sigma Optional. numeric value representing noise level. provided, estimated using Median Marcenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optimal_shrinkage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal Shrinkage of Singular Values — optimal_shrinkage","text":"list containing: singvals shrunk singular values numeric vector. noiselvl estimated noise level used shrinkage process.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optshrink_impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal Shrinkage of Singular Values — optshrink_impl","title":"Optimal Shrinkage of Singular Values — optshrink_impl","text":"Performs optimal shrinkage singular values according specified loss function, given shape parameter beta noise level sigma. function adjusts singular values matrix reduce noise enhance signal components based Marčenko-Pastur distribution.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optshrink_impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal Shrinkage of Singular Values — optshrink_impl","text":"","code":"optshrink_impl(singvals, beta, loss, sigma)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optshrink_impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal Shrinkage of Singular Values — optshrink_impl","text":"singvals numeric vector singular values shrunk. beta numeric value 0 1 representing aspect ratio matrix (n/d), n number columns d number rows. loss character string specifying type loss function use shrinkage. Must one \"fro\" (Frobenius norm), \"op\" (Operator norm), \"nuc\" (Nuclear norm). sigma positive numeric value representing noise level used shrinkage process.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optshrink_impl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal Shrinkage of Singular Values — optshrink_impl","text":"numeric vector shrunk singular values.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/optshrink_impl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimal Shrinkage of Singular Values — optshrink_impl","text":"function applies different shrinkage strategies based specified loss function: \"fro\" Uses Frobenius norm shrinkage, minimizes mean squared error. \"op\" Uses Operator norm shrinkage, targets largest singular value. \"nuc\" Uses Nuclear norm shrinkage, adjusts sum singular values penalizing close zero. Internal helper functions used compute adjusted singular values according specified loss type: opt_fro_shrink Calculates shrinkage based Frobenius norm. opt_op_shrink Calculates shrinkage based Operator norm. opt_nuc_shrink Calculates shrinkage based Nuclear norm.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/randDirAngleMJ.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Random Direction Angles — randDirAngleMJ","title":"Calculate Random Direction Angles — randDirAngleMJ","text":"Computes angles random vectors projections onto first r components function simulates angles random direction fixed rank `r` subspace \\(R^n\\). Specifically, calculates angles random vector subspace spanned first `r` dimensions \\(n\\)-dimensional space.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/randDirAngleMJ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Random Direction Angles — randDirAngleMJ","text":"","code":"randDirAngleMJ(n, r, nsim)  randDirAngleMJ(n, r, nsim)"},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/randDirAngleMJ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Random Direction Angles — randDirAngleMJ","text":"n integer representing dimension vector space. r integer representing dimension subspace. nsim integer representing number simulation samples.","code":""},{"path":"https://github.com/ByronSyun/DIVAS_Develop/tree/main/reference/randDirAngleMJ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Random Direction Angles — randDirAngleMJ","text":"Vector angles degrees numeric vector length `nsim`, containing simulated random direction angles (degrees).","code":""}]
